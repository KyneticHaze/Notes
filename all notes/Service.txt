Service

Servisler arka planda ve önplanda çalışan arayüze sahip olmayan bileşenlerdir.

3 Tür hizmet(service) vardır

ön plan
arka plan
bağlı

- ön plan hizmetlerinde bildirim gösterilmelidir.

Çoğu zaman ön plan hizmetlerinin kullanılması yerine WorkManager kullanılması tercih ediliyor.

- arka plan hizmetleri kullanıcı tarafından doğrudan fark edilmeyen işlemler gerçekleştirir. Bir uygulama depolama alanını küçültmek için bir servis kullanmışsa bu servis arka plan servisi olur.

- veri ile alakalı işlemler genelde arka planda çalışıyor.

Service Lifecycle

Servis, startService methodu ile başlar ve onCreate methodu ile yaratılır. Sonrasında onStartCommand methoduna geçilir ve servis ile alakalı yapılacak işlemler burada yapılır. Sonrasında stopService methodu ile servis bitirilir ve onDestroy methodu çalışır.

Yazılı belirttiğim servis yaşam döngüsünü diagram halinde de belirttim. Diagram için projects_diagrams'a gidebilirsin.


AsyncTask

Thread işlemlerini yapmak için kullanılan eski bir yapıdır.

implemente edilecek methodları:

doInBackground() -> Arka planda yapılacak işlemleri bu fonksiyonda yazıyoruz.

onPreExecute() -> Uygulama(execute) öncesi bir dizi işlem gereksinimi duyulursa burada tanımlanır.

onPostExecute() -> Yapılacak asenkron işlemler dizisi son bulduğunda uygulanacak method burasıdır.

Uygulama içinde(DownloadService) service kullandık ve servisin onStartCommand methoduna kendi oluşturduğumuz AsyncTask objesi tanımladık. Objeye 10 saniyelik bir işlem execute ettik. Tabii bundan önce yukarıda bahsettiğim methodları içeren ve AsyncTask'tan miras alan custom bir asynctask sınıfı oluşturduk. O custom sınıfından bir obje oluşturuyoruz esasen.

Sticky

Start_Sticky -> arka planda çalışmasını istediğimiz şeyler için kullanılır. Misal müzik çalmak.

onStartCommand methodu int dönüşlü bir method ve START_STICKY de int döner. onStartCommand methodunun dönüşüne bu kodu verirsek yapacağımız servis işlemi arka planda devam eder.

